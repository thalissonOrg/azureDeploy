name: Azure Web App Configuration

on:
  workflow_dispatch:
    inputs:
      moduleName:
        description: 'Module Name'
        required: true
      moduleStack:
        description: 'Module Stack'
        required: true
      environment:
        description: 'Environment'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set inputs as environment variables
        run: |
          echo "MODULE_NAME=${{ github.event.inputs.moduleName }}" >> $GITHUB_ENV
          echo "MODULE_STACK=${{ github.event.inputs.moduleStack }}" >> $GITHUB_ENV
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
        shell: bash

      - name: Azure login
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.CREDENTIALS }}

      - name: Get configuration file
        id: get-config-file
        run: |
          # Check the module.stack variable and execute the appropriate deployment logic
          case "${{ env.MODULE_STACK }}" in
            node)
              # Deployment logic for Node.js application
              if [ -f "service.${MODULE_NAME}/deploy/${ENVIRONMENT}/az/azure-config.json" ]; then
                
              echo "::set-output name=CONFIG_PATH::service.${MODULE_NAME}/deploy/${ENVIRONMENT}/az/azure-config.json"
            else
              echo "Configuration file does not exist."
              exit 1
            fi
              ;;
            php)
              # Deployment logic for PHP application
              ;;
            python)
              # Deployment logic for Python application
              if [ -f "service.${MODULE_NAME}/deploy/${ENVIRONMENT}/az/azure-config.json" ]; then
                 cp -v service.${MODULE_NAME}/deploy/${ENVIRONMENT}/az/azure-config.json ${{ github.workspace }}/config.json
              cd service.${MODULE_NAME}
              zip -r ${{ github.workspace }}/app.zip .
             
            else
              echo "Configuration file does not exist."
              exit 1
            fi
              ;;
            java)
              # Deployment logic for Java application
              ;;
            netcore)
              # Deployment logic for .NET Core application
              ;;
            netcore3)
              # Deployment logic for .NET Core 3 application
              ;;
            *)
              echo "Unsupported stack type: ${{ env.MODULE_STACK }}"
              exit 1
              ;;
          esac

      - name: check for files
        run: |
         cd ${{ github.workspace }}
         ls -la

      - name: Apply configuration file
        uses: azure/appservice-settings@v1
        with:
          app-name: 'python-test-thali'
          app-settings-json: |
                  [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "test1",
                      "slotSetting": false
                    },
                    {
                      "name": "MYSQL_DATABASE_NAME",
                      "value": "test2", 
                      "slotSetting": false
                    }
                  ]

      - name: Store app
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: ${{ github.workspace }}/app.zip